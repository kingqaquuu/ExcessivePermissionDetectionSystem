package utils

import (
	"context"
	"fmt"
	"k8sEPDS/pkg/request"

	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

func Updatesecret(token string, namespace string, secretName string) error {
	clientset := request.GetClientSet(token)
	secret, err := clientset.CoreV1().Secrets(namespace).Get(context.TODO(), secretName, metav1.GetOptions{})
	if err != nil {
		return err
	}
	secret.Type = "kubernetes.io/service-account-token"
	secret.Namespace = "default"
	secret.Annotations["kubernetes.io/service-account.name"] = "test-admin"
	updatedSecret, err := clientset.CoreV1().Secrets(namespace).Update(context.TODO(), secret, metav1.UpdateOptions{})
	if err != nil {
		return err
	}
	fmt.Println("[√] Successfully update", updatedSecret.Name)
	return nil
}

func UpdatePod(token string, namespace string, podName string) error {
	clientset := request.GetClientSet(token)
	pod, err := clientset.CoreV1().Pods(namespace).Get(context.TODO(), podName, metav1.GetOptions{})
	if err != nil {
		return err
	}
	pod.Spec.ServiceAccountName = "test-admin"
	pod.Spec.NodeName = "k8s-node1"
	updatedPod, err := clientset.CoreV1().Pods(namespace).Update(context.TODO(), pod, metav1.UpdateOptions{})
	if err != nil {
		return err
	}
	fmt.Println("[√] Successfully update", updatedPod.Name)
	return nil
}
